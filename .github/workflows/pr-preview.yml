name: 📱 PR Preview Build

on:
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize, reopened ]

jobs:
  preview:
    name: 🔍 Build PR Preview
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}

    - name: ☕ Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: 🎯 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.32.0'
        channel: 'stable'
        cache: true

    - name: 📦 Get dependencies
      run: flutter pub get

    - name: 🔨 Build Preview APK
      run: |
        # PR 번호를 버전에 포함
        PR_NUMBER=${{ github.event.number }}
        COMMIT_SHORT=$(echo ${{ github.event.pull_request.head.sha }} | cut -c1-7)

        # build.gradle에서 버전 코드 수정 (더미 구현)
        echo "Building preview APK for PR #$PR_NUMBER ($COMMIT_SHORT)"

        flutter build apk --debug \
          --dart-define=BUILD_TYPE=preview \
          --dart-define=PR_NUMBER=$PR_NUMBER \
          --dart-define=COMMIT_SHA=$COMMIT_SHORT

    - name: 📱 Generate APK Info
      id: apk_info
      run: |
        APK_PATH="build/app/outputs/flutter-apk/app-debug.apk"
        APK_SIZE=$(du -h "$APK_PATH" | cut -f1)
        echo "apk_size=$APK_SIZE" >> $GITHUB_OUTPUT
        echo "apk_path=$APK_PATH" >> $GITHUB_OUTPUT

    - name: 📤 Upload Preview APK
      uses: actions/upload-artifact@v4
      with:
        name: gigachad-runner-pr-${{ github.event.number }}-preview
        path: ${{ steps.apk_info.outputs.apk_path }}
        retention-days: 7

    - name: 📝 Comment PR with Download Link
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const pr_number = context.payload.pull_request.number;
          const commit_sha = context.payload.pull_request.head.sha.substring(0, 7);
          const apk_size = '${{ steps.apk_info.outputs.apk_size }}';

          const comment = `## 📱 PR Preview Build

          ### 🔨 Build Information
          - **PR**: #${pr_number}
          - **Commit**: \`${commit_sha}\`
          - **APK Size**: ${apk_size}
          - **Build Status**: ✅ Success

          ### 📥 Download
          The preview APK is available in the [Actions artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}).

          ### 🧪 Testing
          - Install the APK on your Android device
          - Test the changes in this PR
          - Report any issues in the comments

          ### ⚠️ Note
          This is a debug build for testing purposes only. Do not distribute publicly.

          ---
          *🤖 This comment was automatically generated by GitHub Actions.*`;

          // Delete previous bot comments
          const comments = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: pr_number
          });

          for (const comment of comments.data) {
            if (comment.body.includes('## 📱 PR Preview Build') && comment.user.type === 'Bot') {
              await github.rest.issues.deleteComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: comment.id
              });
            }
          }

          // Post new comment
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: pr_number,
            body: comment
          });